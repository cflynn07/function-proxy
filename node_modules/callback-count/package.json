{
  "name": "callback-count",
  "version": "0.1.0",
  "description": "Count your callbacks before continuing. A tiny control flow helper that supports dynamic counting.",
  "main": "index.js",
  "scripts": {
    "test": "mocha"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/tjmehta/callback-count.git"
  },
  "keywords": [
    "callback",
    "count",
    "callback",
    "count",
    "counter",
    "control",
    "flow",
    "next",
    "done",
    "dynamic"
  ],
  "author": {
    "name": "Tejesh Mehta"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/tjmehta/callback-count/issues"
  },
  "homepage": "https://github.com/tjmehta/callback-count",
  "devDependencies": {
    "should": "^3.1.3",
    "mocha": "^1.17.1"
  },
  "readme": "callback-count [![Build Status](https://travis-ci.org/tjmehta/callback-count.png)](https://travis-ci.org/tjmehta/callback-count)\n==============\n\n#### Count callbacks before continuing, tiny control flow helper, allows dynamic counting.\n\n### Flow control\n```js\nvar counter = createCounter(done);\n\nsetTimeout(counter.inc().next, 100);\nsetTimeout(counter.inc().next, 100);\n\nfunction done  (err) {\n  console.log('finished.');\n}\n```\n\n### .inc() allows you to dynamically update the number of callbacks you are expecting.\n```js\nvar counter = createCounter(done);\n\ncounter.inc().inc().inc();\ncounter.next().next().next();\n\nfunction done  (err) {\n  console.log('finished.');\n}\n```\n\n### The constructor can take an initial value for the count expected\n```js\nvar counter = createCounter(3, done);\n\ncounter.next().next().next();\n\nfunction done (err) {\n  console.log('finished.');\n}\n```\n\n### .next() decrements the count and callsback when the count has reached 0\n```js\nvar counter = createCounter(3, done);\n\ncounter.next().next().next();\n\nfunction done (err) {\n  console.log(counter.count); // 0\n  console.log('finished.');\n}\n```\n\n### if .next() receives an error it will callback immediately\n```js\nvar counter = createCounter(3, done);\n\ncounter.next(new Error('boom'));\n\nfunction done (err) {\n  console.log(err.message); // boom\n}\n```\n\n### License: MIT",
  "readmeFilename": "README.md",
  "_id": "callback-count@0.1.0",
  "_from": "callback-count@"
}
